pipeline {
    agent { label 'dev'}

    environment {
        AWS_REGION = 'ap-south-1'
        EKS_CLUSTER_NAME = 'EKS_CLOUD'
        //KUBECONFIG = "${env.WORKSPACE}/kubeconfig"
    }

    stages {
        stage('Setup AWS CLI') {
            steps {
                sh 'aws --version'
            }
        }

       // stage('Setup kubectl') {
         //   steps {
           //     withCredentials([file(credentialsId: 'k8s', variable: 'KUBECONFIG')]) {
             //       sh 'kubectl version --client'
               //     sh "aws eks --region ${env.AWS_REGION} update-kubeconfig --name ${env.EKS_CLUSTER_NAME}"
        //        }
          //  }
        //}

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        // stage('Build and Push Docker Image') {
        //     steps {
        //         script {
        //             dockerImage = docker.build("my-app:${env.BUILD_ID}")
        //             docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials-id') {
        //                 dockerImage.push()
        //             }
        //         }
        //     }
        // }

        stage('Deploy to EKS') {
            steps {
                withCredentials([file(credentialsId: 'k8s', variable: 'KUBECONFIG')]) {
                    sh 'kubectl apply -f Kubernetes/deployment.yaml'
                    sh 'kubectl apply -f Kubernetes/service.yaml'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
